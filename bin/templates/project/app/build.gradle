/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */


buildscript {
	repositories {
        mavenCentral()
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'application'
}


// os specific
def os = System.getProperty("os.name").toLowerCase()
def osgi_platform = '';
def vmArgs = []

if (os.contains("windows")) {
	osgi_platform = 'win32.win32.x86_64';
} else if (os.contains("linux")) { 
	osgi_platform = 'gtk.linux.x86_64'; 
} else if (os.contains("mac")) { 
	osgi_platform = 'cocoa.macosx.x86_64'; 
	vmArgs = ['-XstartOnFirstThread']
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            // The maven property ${osgi.platform} is not handled by Gradle
            // so we replace the dependency, using the osgi platform from the project settings
            substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.$osgi_platform:3.116.100")
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources' 
            srcDir 'src/main/assets'
        }

    }
 }

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
}

dependencies {
    
}

// PLUGIN GRADLE EXTENSIONS START"
// PLUGIN GRADLE EXTENSIONS END

tasks.withType(Copy).all { duplicatesStrategy 'exclude' }

apply plugin : "java" 

ext {
   javaMainClass = "com.ashera.swt.starter.TestApp"
}

application {
    mainClassName = javaMainClass
	applicationDefaultJvmArgs =  vmArgs
    
}